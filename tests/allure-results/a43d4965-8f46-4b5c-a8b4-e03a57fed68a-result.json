{"name": "test_enter_fly_data", "status": "failed", "statusDetails": {"message": "AssertionError: assert 3 != 3\n +  where 3 = int('3')\n +    where '3' = get_element_text(('id', 'adult1'))\n +      where get_element_text = <pages.home_page.HomePage object at 0x000001E2D3CF1820>.get_element_text\n +      and   ('id', 'adult1') = <pages.home_page.HomePage object at 0x000001E2D3CF1820>.ADULT_COUNT", "trace": "home_page = <pages.home_page.HomePage object at 0x000001E2D3CF1820>\n\n    @allure.epic(\"Busqueda de vuelos\")\n    @allure.story(\"3.- Introducir datos de vuelo\")\n    def test_enter_fly_data(home_page: HomePage):\n        with allure.step(\"Dado que se recogen los datos de vuelo desde un excel\"):\n            flydata = DataProvider.read_excel_to_dict(EXCEL_PATH)\n    \n            with allure.step(\"Cuando introduzco esos datos en el formulario de busqueda vuelos\"):\n                for data in flydata:\n    \n                    # Asignamos los valores de la fila actual\n                    home_page.enter_origin(data['Origin'])    # Entra el origen desde los datos\n                    assert data['Origin'] == home_page.get_locator_attribute(home_page.ORIGIN_TXTBOX, home_page.ATR_VALUE)\n                    home_page.enter_destiny(data['Destiny'])  # Entra el destino desde los datos\n                    home_page.enter_stardate(data['Start_Date']) # Entra la fecha de inicio\n                    home_page.enter_enddate(data['End_Date'])  # Entra la fecha de fin\n    \n                    home_page.enter_passengers(data['Adult'], data['Child'], data['Baby'])  # Entra la cantidad de pasajeros\n    \n                    with allure.step(\"Se comprueba que el número de pasajeros es el esperado y guarda una captura\"):\n>                       assert data['Adult'] != int(home_page.get_element_text(home_page.ADULT_COUNT))\nE                       AssertionError: assert 3 != 3\nE                        +  where 3 = int('3')\nE                        +    where '3' = get_element_text(('id', 'adult1'))\nE                        +      where get_element_text = <pages.home_page.HomePage object at 0x000001E2D3CF1820>.get_element_text\nE                        +      and   ('id', 'adult1') = <pages.home_page.HomePage object at 0x000001E2D3CF1820>.ADULT_COUNT\n\ntest_search.py:50: AssertionError"}, "steps": [{"name": "Dado que se recogen los datos de vuelo desde un excel", "status": "failed", "statusDetails": {"message": "AssertionError: assert 3 != 3\n +  where 3 = int('3')\n +    where '3' = get_element_text(('id', 'adult1'))\n +      where get_element_text = <pages.home_page.HomePage object at 0x000001E2D3CF1820>.get_element_text\n +      and   ('id', 'adult1') = <pages.home_page.HomePage object at 0x000001E2D3CF1820>.ADULT_COUNT\n", "trace": "  File \"C:\\Users\\Ivan\\Desktop\\Testing\\Proyectos\\Iberia_FlySearch\\tests\\test_search.py\", line 50, in test_enter_fly_data\n    assert data['Adult'] != int(home_page.get_element_text(home_page.ADULT_COUNT))\n"}, "steps": [{"name": "Cuando introduzco esos datos en el formulario de busqueda vuelos", "status": "failed", "statusDetails": {"message": "AssertionError: assert 3 != 3\n +  where 3 = int('3')\n +    where '3' = get_element_text(('id', 'adult1'))\n +      where get_element_text = <pages.home_page.HomePage object at 0x000001E2D3CF1820>.get_element_text\n +      and   ('id', 'adult1') = <pages.home_page.HomePage object at 0x000001E2D3CF1820>.ADULT_COUNT\n", "trace": "  File \"C:\\Users\\Ivan\\Desktop\\Testing\\Proyectos\\Iberia_FlySearch\\tests\\test_search.py\", line 50, in test_enter_fly_data\n    assert data['Adult'] != int(home_page.get_element_text(home_page.ADULT_COUNT))\n"}, "steps": [{"name": "Se comprueba que el número de pasajeros es el esperado y guarda una captura", "status": "failed", "statusDetails": {"message": "AssertionError: assert 3 != 3\n +  where 3 = int('3')\n +    where '3' = get_element_text(('id', 'adult1'))\n +      where get_element_text = <pages.home_page.HomePage object at 0x000001E2D3CF1820>.get_element_text\n +      and   ('id', 'adult1') = <pages.home_page.HomePage object at 0x000001E2D3CF1820>.ADULT_COUNT\n", "trace": "  File \"C:\\Users\\Ivan\\Desktop\\Testing\\Proyectos\\Iberia_FlySearch\\tests\\test_search.py\", line 50, in test_enter_fly_data\n    assert data['Adult'] != int(home_page.get_element_text(home_page.ADULT_COUNT))\n"}, "start": 1728824520573, "stop": 1728824520584}], "start": 1728824518608, "stop": 1728824520585}], "start": 1728824518461, "stop": 1728824520585}], "attachments": [{"name": "log", "source": "2f4e3972-4931-4f40-8e8c-7a0981ff6846-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "dbffe8b2-3b08-40c9-a8cd-d769afd2e09a-attachment.txt", "type": "text/plain"}], "start": 1728824518461, "stop": 1728824520585, "uuid": "beb66e33-ca48-404d-8450-e43b0eed66d4", "historyId": "2a70276c476987a576e10154e9d213f6", "testCaseId": "2a70276c476987a576e10154e9d213f6", "fullName": "test_search#test_enter_fly_data", "labels": [{"name": "epic", "value": "Busqueda de vuelos"}, {"name": "story", "value": "3.- Introducir datos de vuelo"}, {"name": "suite", "value": "test_search"}, {"name": "host", "value": "DESKTOP-PD0N784"}, {"name": "thread", "value": "27764-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_search"}]}